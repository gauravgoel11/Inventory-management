package com.inventory.management.inventory.management;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author gaura
 */

import java.sql.*;
import java.util.*;
import org.sqlite.JDBC;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import java.sql.*;
import java.util.Date;  // For Date handling
import java.text.SimpleDateFormat;  // For formatting Date to string
import com.toedter.calendar.JDateChooser;  // JDateChooser for date selection
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import java.util.Date;  // For handling Date objects
import java.text.SimpleDateFormat;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.print.PrinterException;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.DriverManager;
//import org.apache.commons.dbutils.DbUtils;
import javax.swing.table.DefaultTableModel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.awt.print.PrinterException;
import javax.swing.table.DefaultTableModel;// For formatting Date to a specific pattern
// For autocomplete in JComboBox


public class Part_items extends javax.swing.JFrame {

    /**
     * Creates new form entry
     */
    public Part_items() {
        initComponents();
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        empEnt = new javax.swing.JLabel();
        empName = new javax.swing.JComboBox<>();
        try{
            Class.forName("org.sqlite.JDBC");
            Connection con = DriverManager.getConnection("jdbc:sqlite:inven.db");
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("Select * from part_items");
            while(rs.next()){
                String s = rs.getString("partName");
                empName.addItem(s);
            }
            con.close();
        }
        catch(ClassNotFoundException | SQLException e){
            System.out.println("Error is "+e.getMessage());
        }
        AutoCompleteDecorator.decorate(empName);
        itemName = new javax.swing.JComboBox<>();
        try{
            Class.forName("org.sqlite.JDBC");
            Connection con = DriverManager.getConnection("jdbc:sqlite:inven.db");
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("Select * from items");
            while(rs.next()){
                itemName.addItem(rs.getString("itemName"));
                System.out.println(rs.getString("itemName"));
            }
            con.close();
        }
        catch(ClassNotFoundException | SQLException e){
            System.out.println("Error is "+e.getMessage());
        }

        AutoCompleteDecorator.decorate(itemName);
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButtonDelete = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldQuantity = new javax.swing.JTextField();
        jButtonView = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextFieldNewPartName = new javax.swing.JTextField();
        jButtonAdd = new javax.swing.JButton();
        jButtonEdit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        empEnt.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        empEnt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        empEnt.setText("Item Require for part");
        getContentPane().add(empEnt);
        empEnt.setBounds(0, 0, 650, 70);

        empName.setEditable(true);
        empName.setToolTipText("");
        getContentPane().add(empName);
        empName.setBounds(10, 100, 200, 22);

        itemName.setEditable(true);
        itemName.setToolTipText("");
        getContentPane().add(itemName);
        itemName.setBounds(10, 170, 200, 22);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(0, 70, 790, 10);

        jLabel1.setText("Quantity");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(340, 150, 100, 16);

        jLabel2.setText("New part Name");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(340, 80, 100, 16);

        jLabel3.setText("Item Name");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 150, 100, 16);

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonDelete);
        jButtonDelete.setBounds(510, 200, 80, 23);

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(510, 80, 80, 23);

        jLabel5.setText("Existing Part Name");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(10, 80, 100, 16);
        getContentPane().add(jTextFieldQuantity);
        jTextFieldQuantity.setBounds(330, 170, 160, 30);

        jButtonView.setText("View");
        jButtonView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonViewActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonView);
        jButtonView.setBounds(510, 110, 80, 23);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Part", "Item", "Quantity"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(0, 230, 600, 230);
        getContentPane().add(jTextFieldNewPartName);
        jTextFieldNewPartName.setBounds(330, 100, 160, 30);

        jButtonAdd.setText("Add");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonAdd);
        jButtonAdd.setBounds(510, 140, 80, 23);

        jButtonEdit.setText("Edit");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonEdit);
        jButtonEdit.setBounds(510, 170, 80, 23);

        setSize(new java.awt.Dimension(614, 479));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        // Get the selected item and quantity
String selectedItem = (String) itemName.getSelectedItem();
    
    if (selectedItem != null && !selectedItem.isEmpty()) {
        try {
            Connection con = DriverManager.getConnection("jdbc:sqlite:inven.db");
            String query = "DELETE FROM items WHERE itemName = ?";
            PreparedStatement ps = con.prepareStatement(query);
            ps.setString(1, selectedItem);
            ps.executeUpdate();
            
            con.close();
            JOptionPane.showMessageDialog(null, "Item Deleted Successfully");
        } catch (SQLException e) {
            System.out.println("Error: " + e.getMessage());
        }
    } else {
        JOptionPane.showMessageDialog(null, "Please select an item to delete");
    }

        
        
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new AdminMenu().setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed

    String newPartName = jTextFieldNewPartName.getText();
    String selectedItem = (String) itemName.getSelectedItem();
    String quantity = jTextFieldQuantity.getText();
    
    if (!newPartName.isEmpty() && !selectedItem.isEmpty() && !quantity.isEmpty()) {
        try {
            Connection con = DriverManager.getConnection("jdbc:sqlite:inven.db");
            String query = "INSERT INTO part_items (partName, itemName, quantity) VALUES (?, ?, ?)";
            PreparedStatement ps = con.prepareStatement(query);
            ps.setString(1, newPartName);
            ps.setString(2, selectedItem);
            ps.setInt(3, Integer.parseInt(quantity));
            ps.executeUpdate();
            
            con.close();
            JOptionPane.showMessageDialog(null, "Item Added Successfully");
        } catch (SQLException e) {
            System.out.println("Error: " + e.getMessage());
        }
    } else {
        JOptionPane.showMessageDialog(null, "Please fill in all fields");
    }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed

    String newPartName = jTextFieldNewPartName.getText();
    String selectedItem = (String) itemName.getSelectedItem();
    String quantity = jTextFieldQuantity.getText();
    
    if (!newPartName.isEmpty() && !selectedItem.isEmpty() && !quantity.isEmpty()) {
        try {
            Connection con = DriverManager.getConnection("jdbc:sqlite:inven.db");
            String query = "UPDATE part_items SET partName = ?, quantity = ? WHERE itemName = ?";
            PreparedStatement ps = con.prepareStatement(query);
            ps.setString(1, newPartName);
            ps.setInt(2, Integer.parseInt(quantity));
            ps.setString(3, selectedItem);
            ps.executeUpdate();
            
            con.close();
            JOptionPane.showMessageDialog(null, "Item Updated Successfully");
        } catch (SQLException e) {
            System.out.println("Error: " + e.getMessage());
        }
    } else {
        JOptionPane.showMessageDialog(null, "Please fill in all fields");
    }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonEditActionPerformed

    private void jButtonViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonViewActionPerformed
  try {
        Connection con = DriverManager.getConnection("jdbc:sqlite:inven.db");
        String query = "SELECT * FROM part_items";
        Statement st = con.createStatement();
        ResultSet rs = st.executeQuery(query);
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);  // Clear existing rows
        
        while (rs.next()) {
            String partName = rs.getString("partName");
            String itemName = rs.getString("itemName");
            int quantity = rs.getInt("quantity");
            model.addRow(new Object[]{partName, itemName, quantity});
        }
        
        con.close();
    } catch (SQLException e) {
        System.out.println("Error: " + e.getMessage());
    }        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonViewActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Part_items.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Part_items.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Part_items.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Part_items.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Part_items().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel empEnt;
    private javax.swing.JComboBox<String> empName;
    private javax.swing.JComboBox<String> itemName;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JButton jButtonView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldNewPartName;
    private javax.swing.JTextField jTextFieldQuantity;
    // End of variables declaration//GEN-END:variables
}
